{"ast":null,"code":"import * as Yup from \"yup\";\nconst regexEmail = new RegExp(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nconst name = Yup.string().trim().required(\"No data entered\");\nconst lastName = Yup.string().trim().required(\"No data entered\");\nconst email = Yup.string().trim().matches(regexEmail, \"The email is incorrect\").required(\"No data entered\");\nconst password = Yup.string().trim().required(\"Password not entered\");\nconst confirmPassword = Yup.string().trim().required(\"No data entered\").oneOf([Yup.ref(\"password\")], \"Password doesn't match\");\nexport const schemas = {\n  registration: Yup.object().shape({\n    name,\n    lastName,\n    email,\n    password,\n    confirmPassword\n  }),\n  login: Yup.object().shape({\n    email,\n    password\n  }),\n  recovery: Yup.object().shape({\n    email\n  }),\n  newpass: Yup.object().shape({\n    password,\n    confirmPassword\n  })\n};\nexport const initialValues = {\n  registration: {\n    name: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  },\n  login: {\n    email: \"\",\n    password: \"\",\n    toggle: false\n  },\n  recovery: {\n    email: \"\"\n  },\n  newpass: {\n    password: \"\",\n    confirmPassword: \"\"\n  }\n};","map":{"version":3,"names":["Yup","regexEmail","RegExp","name","string","trim","required","lastName","email","matches","password","confirmPassword","oneOf","ref","schemas","registration","object","shape","login","recovery","newpass","initialValues","toggle"],"sources":["D:/proj_jobseeker/atorization/src/components/AuthForms/helper.js"],"sourcesContent":["import * as Yup from \"yup\";\r\n\r\nconst regexEmail = new RegExp(\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n);\r\n\r\nconst name = Yup.string().trim().required(\"No data entered\");\r\nconst lastName = Yup.string().trim().required(\"No data entered\");\r\nconst email = Yup.string()\r\n  .trim()\r\n  .matches(regexEmail, \"The email is incorrect\")\r\n  .required(\"No data entered\");\r\nconst password = Yup.string().trim().required(\"Password not entered\");\r\nconst confirmPassword = Yup.string()\r\n  .trim()\r\n  .required(\"No data entered\")\r\n  .oneOf([Yup.ref(\"password\")], \"Password doesn't match\");\r\n\r\nexport const schemas = {\r\n  registration: Yup.object().shape({\r\n    name,\r\n    lastName,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n  }),\r\n  login: Yup.object().shape({\r\n    email,\r\n    password,\r\n  }),\r\n  recovery: Yup.object().shape({\r\n    email,\r\n  }),\r\n  newpass: Yup.object().shape({\r\n    password,\r\n    confirmPassword,\r\n  }),\r\n};\r\n\r\nexport const initialValues = {\r\n  registration: {\r\n    name: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  },\r\n  login: {\r\n    email: \"\",\r\n    password: \"\",\r\n    toggle: false,\r\n  },\r\n  recovery: {\r\n    email: \"\",\r\n  },\r\n  newpass: {\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,UAAU,GAAG,IAAIC,MAAM,CAC3B,uJACF,CAAC;AAED,MAAMC,IAAI,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,iBAAiB,CAAC;AAC5D,MAAMC,QAAQ,GAAGP,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,iBAAiB,CAAC;AAChE,MAAME,KAAK,GAAGR,GAAG,CAACI,MAAM,CAAC,CAAC,CACvBC,IAAI,CAAC,CAAC,CACNI,OAAO,CAACR,UAAU,EAAE,wBAAwB,CAAC,CAC7CK,QAAQ,CAAC,iBAAiB,CAAC;AAC9B,MAAMI,QAAQ,GAAGV,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,sBAAsB,CAAC;AACrE,MAAMK,eAAe,GAAGX,GAAG,CAACI,MAAM,CAAC,CAAC,CACjCC,IAAI,CAAC,CAAC,CACNC,QAAQ,CAAC,iBAAiB,CAAC,CAC3BM,KAAK,CAAC,CAACZ,GAAG,CAACa,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,wBAAwB,CAAC;AAEzD,OAAO,MAAMC,OAAO,GAAG;EACrBC,YAAY,EAAEf,GAAG,CAACgB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAC/Bd,IAAI;IACJI,QAAQ;IACRC,KAAK;IACLE,QAAQ;IACRC;EACF,CAAC,CAAC;EACFO,KAAK,EAAElB,GAAG,CAACgB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IACxBT,KAAK;IACLE;EACF,CAAC,CAAC;EACFS,QAAQ,EAAEnB,GAAG,CAACgB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAC3BT;EACF,CAAC,CAAC;EACFY,OAAO,EAAEpB,GAAG,CAACgB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAC1BP,QAAQ;IACRC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMU,aAAa,GAAG;EAC3BN,YAAY,EAAE;IACZZ,IAAI,EAAE,EAAE;IACRI,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTE,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC;EACDO,KAAK,EAAE;IACLV,KAAK,EAAE,EAAE;IACTE,QAAQ,EAAE,EAAE;IACZY,MAAM,EAAE;EACV,CAAC;EACDH,QAAQ,EAAE;IACRX,KAAK,EAAE;EACT,CAAC;EACDY,OAAO,EAAE;IACPV,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}