{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj_jobseeker\\\\atorization\\\\src\\\\components\\\\AuthForms\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Field, Form, Formik } from \"formik\";\nimport { initialValues, schemas } from \"./helper\";\nimport Input from \"../UI/Input/Input\";\nimport Button from \"../UI/Button/Button\";\nimport emailIcon from \"../../assets/emailIcon.png\";\nimport passIcon from \"../../assets/passIcon.png\";\nimport { textData } from \"../../utils/textData\";\nimport styles from \"./AuthForms.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  const submitFormHandler = values => {\n    //отправка формы на сервер\n    console.log(\"Sucsess\", values);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues.login,\n    validationSchema: schemas.login,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      submitFormHandler(values);\n      resetForm();\n    },\n    children: ({\n      errors,\n      values,\n      touched,\n      isValid,\n      dirty\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      className: styles.authForm,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Your email\",\n        img: emailIcon,\n        error: errors,\n        values: values,\n        touched: touched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        img: passIcon,\n        error: errors,\n        values: values,\n        touched: touched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.passOptions,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          id: \"toggle\",\n          type: \"checkbox\",\n          name: \"toggle\",\n          className: styles.checkboxInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"toggle\",\n          className: styles.checkboxLabel,\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"../forgot-password\",\n          children: \"Forgot your password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: styles.authBtn,\n        disabled: !isValid || !dirty,\n        children: textData[`${pathname}`][\"sendBtn\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.alernativText,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Do you have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"../registration\",\n          children: textData[`${pathname}`][\"linkBtn\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"qVMqkCpYCjknUqSjfMln5RFSkbo=\", false, function () {\n  return [useLocation];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Link","useLocation","Field","Form","Formik","initialValues","schemas","Input","Button","emailIcon","passIcon","textData","styles","jsxDEV","_jsxDEV","LoginForm","_s","pathname","submitFormHandler","values","console","log","login","validationSchema","onSubmit","resetForm","children","errors","touched","isValid","dirty","className","authForm","name","id","placeholder","img","error","fileName","_jsxFileName","lineNumber","columnNumber","passOptions","type","checkboxInput","htmlFor","checkboxLabel","to","authBtn","disabled","alernativText","_c","$RefreshReg$"],"sources":["D:/proj_jobseeker/atorization/src/components/AuthForms/LoginForm.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { initialValues, schemas } from \"./helper\";\r\n\r\nimport Input from \"../UI/Input/Input\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nimport emailIcon from \"../../assets/emailIcon.png\";\r\nimport passIcon from \"../../assets/passIcon.png\";\r\nimport { textData } from \"../../utils/textData\";\r\n\r\nimport styles from \"./AuthForms.module.css\";\r\n\r\nconst LoginForm = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  const submitFormHandler = (values) => {\r\n    //отправка формы на сервер\r\n    console.log(\"Sucsess\", values);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues.login}\r\n      validationSchema={schemas.login}\r\n      onSubmit={(values,{ resetForm }) => {\r\n        submitFormHandler(values)\r\n        resetForm()\r\n      }\r\n      }\r\n      \r\n    >\r\n      {({ errors, values, touched, isValid, dirty }) => (\r\n        <Form className={styles.authForm}>\r\n          <Input\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Your email\"\r\n            img={emailIcon}\r\n            error={errors}\r\n            values={values}\r\n            touched={touched}\r\n          />\r\n\r\n          <Input\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            img={passIcon}\r\n            error={errors}\r\n            values={values}\r\n            touched={touched}\r\n          />\r\n\r\n          <div className={styles.passOptions}>\r\n            <Field\r\n              id=\"toggle\"\r\n              type=\"checkbox\"\r\n              name=\"toggle\"\r\n              className={styles.checkboxInput}\r\n            />\r\n            <label htmlFor=\"toggle\" className={styles.checkboxLabel}>\r\n              Remember me\r\n            </label>\r\n            <Link to=\"../forgot-password\" >\r\n              Forgot your password?\r\n            </Link>\r\n          </div>\r\n          {/* <Link to=\"/\"> */}\r\n          <Button\r\n            type=\"submit\"\r\n            className={styles.authBtn}\r\n            disabled={!isValid || !dirty}\r\n          >\r\n           {textData[`${pathname}`][\"sendBtn\"]}\r\n          </Button>\r\n          {/* </Link> */}\r\n          <div className={styles.alernativText}>\r\n            <p>Do you have an account?</p>\r\n            <Link to=\"../registration\">{textData[`${pathname}`][\"linkBtn\"]}</Link>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}